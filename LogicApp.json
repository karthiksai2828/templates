{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    //"workflows_ValidateContactAndAddAsPortalUser_name": {
    //  "defaultValue": "ValidateContactAndAddAsPortalUserTestDep",
    //  "type": "String"
    //},
    "connections_azuread_name": {
      "defaultValue": "azuread",
      "type": "string"
    },
    "connections_cds_name": {
      "defaultValue": "commondataservice",
      "type": "string"
    },
    //"LogicAppLocation": {
    //  "type": "string",
    //  "minLength": 1,
    //  "allowedValues": [
    //    "[resourceGroup().location]",
    //    "australiaeast"
    //  ],
    //  "defaultValue": "australiaeast"
    //},
    "region": {
      "type": "string",
      "defaultValue": "australiaeast",
      "metadata": {
        "description": "The Azure region that the resource is deployed to."
      },
      "allowedValues": [
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "[resourceGroup().location]"
      ]
    },
    "workload": {
      "type": "string",
      "defaultValue": "workplace-cntntf",
      "metadata": {
        "description": "The broad purpose of the resource."
      }
    },
    "organisation": {
      "type": "string",
      "defaultValue": "bslau",
      "metadata": {
        "description": "The organisation that the resource group or resource is owned by."
      }
    },
    "environmentType": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Whether this resource is Dev/Test/Prod/etc."
      },
      "allowedValues": [
        "dev",
        "tst",
        "prod",
        "can"
      ]
    },
    "regionCode": {
      "type": "string",
      "defaultValue": "aes",
      "metadata": {
        "description": "The Azure region code that the resource is deployed to."
      },
      "allowedValues": [
        "eas",
        "sea",
        "cus",
        "eus",
        "eus2",
        "wus",
        "nus",
        "sus",
        "neu",
        "weu",
        "jws",
        "jes",
        "brs",
        "aes",
        "ase",
        "sin",
        "cin",
        "win",
        "ccn",
        "ces",
        "uks",
        "ukw",
        "wcu",
        "wus2"
      ]
    },
    "chargeTo": {
      "type": "string",
      "defaultValue": "NOT_SET",
      "metadata": {
        "description": "The cost centre that the resource group or resource should be billed to."
      }
    },
    "department": {
      "type": "string",
      "defaultValue": "NOT_SET",
      "metadata": {
        "description": "The name of the department the resource group or resource was provisioned for."
      }
    },
    "system": {
      "type": "string",
      "defaultValue": "NOT_SET",
      "metadata": {
        "description": "The logical system the component belongs to."
      }
    },
    "application": {
      "type": "string",
      "defaultValue": "[parameters('system')]",
      "metadata": {
        "description": "The logical application the component belongs to. If not provided, defaults to the value of the 'system' parameter."
      }
    },
    "projectRequestReference": {
      "type": "string",
      "defaultValue": "NOT_SET",
      "metadata": {
        "description": "The recognised reference of the project or work request that deployed the workload appended by some free text."
      }
    },
    "resourceSME": {
      "type": "string",
      "defaultValue": "NOT_SET",
      "metadata": {
        "description": "The email address of the team (preferred) or individual responsible for implementing the resource during project execution."
      }
    },
    "resourceOwner": {
      "type": "string",
      "defaultValue": "NOT_SET",
      "metadata": {
        "description": "The name of the person responsible for the project long-term (after production release)."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "workplace-shared-oms-bslau-dev-ase",
      "metadata": {
        "description": "The name of the OMS workspace."
      }
    },
    "workspaceResourceGroup": {
      "type": "string",
      "defaultValue": "workplace-shared-rg01-bslau-dev",
      "metadata": {
        "description": "The resource group of the OMS workspace."
      }
    },
    "logicAppState": {
      "type": "string",
      "defaultValue": "Enabled",
      "metadata": {
        "description": "The default state of the Logic App."
      },
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "Development",
      "metadata": {
        "description": "Whether this resource is Dev/Test/Prod/etc."
      },
      "allowedValues": [
        "Development",
        "Test",
        "Canary",
        "Production"
      ]
    }
  },
  "variables": {
    "logicApp": {
      "resourceCode": "Logapp",
      "name": "[toLower(concat(parameters('workload'), '-notifyusers-', 'Logapp', '', '-', parameters('organisation'), '-', parameters('environmentType'), '-', parameters('regionCode')))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('logicApp').name]",
      "location": "[parameters('region')]",
      "properties": {
        "state": "[parameters('logicAppState')]",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Condition_2": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@empty(variables('PrincipalID'))",
                      "@false"
                    ]
                  }
                ]
              },
              "actions": {
                "Condition": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@empty(body('Get_user'))",
                            "@true"
                          ]
                        }
                      }
                    ]
                  },
                  "actions": {
                    "Create_External_Identity_Record": {
                      "runAfter": {
                        "Update_a_record": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "_adx_contactid_value": "@body('Update_a_record')?['contactid']",
                          "adx_identityprovidername": "https://sts.windows.net/78872ca8-56cd-44d6-af6f-4b6263a8cf3c/",
                          "adx_username": "@body('Get_user')?['id']"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['commondataservice']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('org3f7ecf7f.crm6'))}/tables/@{encodeURIComponent(encodeURIComponent('adx_externalidentities'))}/items"
                      }
                    },
                    "Update_a_record": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "_ownerid_type": "",
                          "_parentcustomerid_type": "",
                          "adx_identity_emailaddress1confirmed": true,
                          "adx_identity_lockoutenabled": true,
                          "adx_identity_logonenabled": true,
                          "adx_identity_username": "@body('Get_user')?['id']",
                          "mcs_validationerror": "@{null}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['commondataservice']['connectionId']"
                          }
                        },
                        "method": "patch",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('org3f7ecf7f.crm6'))}/tables/@{encodeURIComponent(encodeURIComponent('contacts'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['contactid']))}"
                      }
                    }
                  },
                  "runAfter": {
                    "Get_user": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Set_Validation_Error_on_Contact": {
                        "runAfter": {},
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "mcs_validationerror": "Unable to find corresponding Azure AD record"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['commondataservice']['connectionId']"
                            }
                          },
                          "method": "patch",
                          "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('org3f7ecf7f.crm6'))}/tables/@{encodeURIComponent(encodeURIComponent('contacts'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['contactid']))}"
                        }
                      }
                    }
                  }
                },
                "Get_user": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuread']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/v1.0/users/@{encodeURIComponent(variables('PrincipalID'))}"
                  }
                }
              },
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ]
              }
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Parse_JSON')?['value']",
              "actions": {
                "Set_variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "PrincipalID",
                    "value": "@items('For_each')?['id']"
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "https://graph.microsoft.com/v1.0/users/?$filter=mail eq '@{triggerBody()?['emailaddress1']}'",
                "authentication": {
                  "audience": "https://graph.microsoft.com",
                  "clientId": "faac352b-0c1e-4c2e-8782-51f561c14fe6",
                  "secret": "VP[2UHArm@Rr=Hh=E47u8Q0M.WIb@Y=t",
                  "tenant": "78872ca8-56cd-44d6-af6f-4b6263a8cf3c",
                  "type": "ActiveDirectoryOAuth"
                }
              },
              "runAfter": {}
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "PrincipalID",
                    "type": "string",
                    "value": "\"0\""
                  }
                ]
              },
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              }
            },
            "Parse_JSON": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('HTTP')",
                "schema": {
                  "properties": {
                    "@@odata.context": {
                      "type": "string"
                    },
                    "value": {
                      "items": {
                        "properties": {
                          "businessPhones": {
                            "type": "array"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "givenName": {},
                          "id": {
                            "type": "string"
                          },
                          "jobTitle": {},
                          "mail": {
                            "type": "string"
                          },
                          "mobilePhone": {},
                          "officeLocation": {},
                          "preferredLanguage": {},
                          "surname": {},
                          "userPrincipalName": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "businessPhones",
                          "displayName",
                          "givenName",
                          "jobTitle",
                          "mail",
                          "mobilePhone",
                          "officeLocation",
                          "preferredLanguage",
                          "surname",
                          "userPrincipalName",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_record_is_created": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "NotificationUrl": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['commondataservice']['connectionId']"
                  }
                },
                "path": "/datasets/@{encodeURIComponent(encodeURIComponent('org3f7ecf7f.crm6'))}/tables/@{encodeURIComponent(encodeURIComponent('contacts'))}/onnewitemswebhook",
                "queries": {
                  "scope": "Organization"
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "commondataservice": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('region'), '/managedApis/', 'commondataservice')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azuread_name'))]",
                "connectionName": "[parameters('connections_azuread_name')]"
              },
              "azuread": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('region'), '/managedApis/', 'azuread')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cds_name'))]",
                "connectionName": "[parameters('connections_cds_name')]"
              }
            }
          }
        }
      },
      "tags": {
        "Application": "[parameters('application')]",
        "Charge To": "[parameters('chargeTo')]",
        "Environment": "[parameters('environmentName')]",
        "Department": "[parameters('department')]",
        "System": "[parameters('system')]",
        "Project Request Reference": "[parameters('projectRequestReference')]",
        "Resource SME": "[parameters('resourceSME')]",
        "Resource Owner": "[parameters('resourceOwner')]"
      }      
    }    
  ]
}
